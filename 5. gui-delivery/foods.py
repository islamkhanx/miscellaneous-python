class Food():
    """–ö–ª–∞—Å—Å —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏"""

    def __init__(self, name: str, recipe: tuple, size: str = 'L'):
        """–§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –±–ª—é–¥–æ –≤ –∫–ª–∞—Å—Å
        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            name (str): –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
            recipe (str): –∏–Ω–≥—Ä–∏–¥–∏–µ—Ç—ã –ø–∏—Ü—Ü—ã –≤ –∫–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞
            size (str, optional): –†–∞–∑–º–µ—Ä XL –∏–ª–∏ L. Defaults to 'XL'.
        """
        self.name = name
        self.recipe = recipe
        self.size = size if size in ('XL', 'L') else 'L'

    def dict(self) -> dict[str, str]:
        """–í–æ–∑–≤—Ä–∞—à–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è"""
        return {str(self.name): ", ".join(self.recipe)}

    def __str__(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã –¥–ª—è –ø—Ä–∏–Ω—Ç–∞ –∏ —Ç–¥"""
        return self.name

    def __eq__(self, other):
        """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ Food –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º"""
        if isinstance(other, Food):
            return (
                self.name == other.name and
                self.recipe == other.recipe and
                self.size == other.size
            )
        return False


margherita = Food(
    'MargheritaüßÄ',
    (
        'mozzarella',
        'tomatoes',
        'tomato sauce',
    ),
    'XL')

pepperoni = Food(
    'Pepperoniüçï',
    (
        'mozzarella',
        'pepperoni',
        'tomato sauce',
    ),
    'XL')

hawaiian = Food(
    'Hawaiianüçç',
    (
        'mozzarella',
        'chicken',
        'tomato sauce',
        'pineapples',
    ),
    'XL')

MENU = [margherita, pepperoni, hawaiian]  # –•—Ä–∞–Ω–∏–º —Ç—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç—Å–∞–Ω—Å—ã –ø–∏—Ü—Ü

if __name__ == '__main__':
    print(*list(map(str, MENU)))
    print(pepperoni.dict())
    print(margherita == pepperoni)
